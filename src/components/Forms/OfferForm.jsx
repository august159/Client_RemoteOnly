import React, { Component } from "react";
import service from "../../api/apiHandler";
import { withUser } from "../Auth/withUser";
import { withRouter } from "react-router-dom";

class OfferForm extends Component {
  state = {
    title: "Growth analyst",
    salary: 45000,
    fieldWork: "Sales et Marketing",
    startingDate: "2021-06-01",
    contractType: "CDI",
    jobDescription:
      "Chez PayFit, nous avons l'ambition de tripler notre croissance cette ann√©e. Dans ce contexte, le r√¥le de l'√©quipe Growth est essentiel. Pour ce faire, nous pensons que l'une des cl√©s sera d'optimiser le taux de conversion de notre entonnoir d'une visite en client. En tant que soci√©t√© SaaS, notre site web est g√©n√©ralement le premier point de contact qu'un prospect a avec nous. Votre r√¥le sera de vous assurer que notre parcours client est le meilleur que nous puissions offrir √† travers tous les canaux entrants. Vos missions ‚≠ê - Soyez le propri√©taire de l'augmentation de notre taux de conversion onsite et imaginez des tactiques astucieuses bien que pour atteindre votre objectif. - Soyez en charge de la mise en ≈ìuvre de notre syst√®me de marquage et de suivi afin de collecter des donn√©es comportementales tangibles et exploitables que vous transformerez en opportunit√©s. - Cr√©er de pr√©cieux tableaux de bord pour permettre √† tout PayFiter d'acc√©der aux donn√©es marketing afin de cr√©er une intelligence collective. - Priorisez les opportunit√©s d'am√©lioration ; g√©n√©rez des hypoth√®ses bas√©es sur les donn√©es qui informent les strat√©gies pour les exp√©riences et les campagnes. - Ex√©cutez des tests A/B d'optimisation Web con√ßus pour am√©liorer une vari√©t√© de param√®tres. - Contr√¥ler et √©valuer les principaux indicateurs de performance. - G√©rer et prioriser les projets que vous allez lancer. - R√©fl√©chir, du point de vue du client, √† la mani√®re dont nous optimisons le site pour la d√©couverte et l'√©ducation.",
    profileDescription:
      "Ce poste a √©t√© con√ßu pour vous si vous avez... ü¶Ñ - 1 √† 2 ans et plus d'exp√©riences professionnelles pertinentes. - De tr√®s fortes capacit√©s d'analyse et de cr√©ativit√©. - Vous √™tes un scientifique cach√© : vous aimez exp√©rimenter et tester de nouvelles id√©es. - Solide connaissance de Google Analytics ou de Segment. - Solides comp√©tences en gestion de projet et en √©tablissement de priorit√©s. - Exp√©rience pr√©alable dans l'ex√©cution de tests A/B con√ßus pour avoir un impact sur les param√®tres de RTA et de RTA. - Capacit√© √† travailler de mani√®re transversale et √† g√©rer un ensemble diversifi√© de parties prenantes. Nous sommes faits pour travailler ensemble si... üë™ - vous √™tes un vrai joueur d'√©quipe qui veut construire une grande histoire de succ√®s avec nous, - vous parlez couramment le fran√ßais et l'anglais et vous souhaitez travailler dans un environnement international et dynamique, - vous avez de solides comp√©tences interpersonnelles et de communication, - vous voulez apprendre, vous am√©liorer et prendre des responsabilit√©s.",
    recruitmentProcess:
      "1Ô∏è‚É£ Entretien t√©l√©phonique avec Stan, notre responsable de la croissance 2Ô∏è‚É£ √âtude de cas 3Ô∏è‚É£ Examen de l'√©tude de cas avec Stan 4Ô∏è‚É£ Rencontre avec Eva, notre responsable du marketing en Allemagne",
    status: true,
    company: "",
    // TODO: get the company's id from the userContext
  };

  handleChange = (event) => {
    const { name, value } = event.target;
    this.setState({ [name]: value });
  };

  handleSubmit = (event) => {
    event.preventDefault();

    const {
      title,
      salary,
      fieldWork,
      startingDate,
      contractType,
      jobDescription,
      profileDescription,
      recruitmentProcess,
    } = this.state;

    service
      .createOffer({
        title,
        salary,
        fieldWork,
        startingDate,
        contractType,
        jobDescription,
        profileDescription,
        recruitmentProcess,
        isActive: true,
      })
      .then((response) => {
        this.props.history.push("/recruiter");
      })
      .catch((error) => {
        console.log(error);
      });

    this.setState({
      title: "",
      salary: 0,
      fieldWork: "",
      startingDate: "",
      contractType: "",
      jobDescription: "",
      profileDescription: "",
      recruitmentProcess: "",
    });
  };

  render() {
    return (
      <form onChange={this.handleChange} onSubmit={this.handleSubmit}>
        <div>
          <label htmlFor="title">Intitul√© de poste*</label>
          <input
            id="title"
            onChange={this.handleChange}
            value={this.state.title}
            className="input"
            name="title"
            type="text"
          />
        </div>
        <div>
          <label htmlFor="salary">Salaire</label>
          <input
            value={this.state.salary}
            onChange={this.handleChange}
            className="input pb-4"
            name="salary"
            type="text"
          />
        </div>
        <div>
          <label htmlFor="fieldWork">Domaine</label>
          <input
            onChange={this.handleChange}
            value={this.state.fieldWork}
            className="input pb-4"
            name="fieldWork"
            type="dropdown"
          />
        </div>
        <div>
          <label htmlFor="startingDate">Date de d√©but</label>
          <input
            value={this.state.startingDate}
            onChange={this.handleChange}
            className="input pb-4"
            name="startingDate"
            type="date"
          />

          <label htmlFor="contractType">Type de contrat*</label>
          <input
            value={this.state.contractType}
            onChange={this.handleChange}
            className="input pb-4"
            name="contractType"
            type="dropdown"
          />
        </div>
        <div>
          <label htmlFor="jobDescription">Descriptif du poste*</label>
          <input
            onChange={this.handleChange}
            value={this.state.jobDescription}
            className="textarea pb-4"
            name="jobDescription"
            type="textarea"
          />
        </div>
        <div>
          <label htmlFor="profileDescription">Profil recherch√©</label>
          <input
            onChange={this.handleChange}
            value={this.state.profileDescription}
            className="textarea pb-4"
            name="profileDescription"
            type="textarea"
          />
        </div>
        <div>
          <label htmlFor="recruitmentProcess">D√©roulement d'entretien</label>
          <input
            onChange={this.handleChange}
            value={this.state.recruitmentProcess}
            className="textarea pb-4"
            name="recruitmentProcess"
            type="textarea"
          />
        </div>

        <button className="button is-link">Poster pour 10‚Ç¨</button>
      </form>
    );
  }
}

export default withRouter(withUser(OfferForm));
